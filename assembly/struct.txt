struct.o:	file format Mach-O 64-bit x86-64

Disassembly of section __TEXT,__text:
_main:
; /Users/hiro2/programming/assembly/struct.c:9
; int main(void){
       0:	55 	pushq	%rbp
       1:	48 89 e5 	movq	%rsp, %rbp
       4:	48 81 ec 80 00 00 00 	subq	$128, %rsp
       b:	48 8d 05 00 00 00 00 	leaq	(%rip), %rax
      12:	b9 50 00 00 00 	movl	$80, %ecx
      17:	89 ca 	movl	%ecx, %edx
      19:	48 8b 35 00 00 00 00 	movq	(%rip), %rsi
      20:	48 8b 36 	movq	(%rsi), %rsi
      23:	48 89 75 f8 	movq	%rsi, -8(%rbp)
      27:	c7 45 9c 00 00 00 00 	movl	$0, -100(%rbp)
; /Users/hiro2/programming/assembly/struct.c:10
; Person member[5] = { {25, "ken"}, {18, "pochi"}, {22, "tama"} };
      2e:	48 8d 75 a0 	leaq	-96(%rbp), %rsi
      32:	48 89 f7 	movq	%rsi, %rdi
      35:	48 89 c6 	movq	%rax, %rsi
      38:	e8 00 00 00 00 	callq	0 <_main+0x3d>
; /Users/hiro2/programming/assembly/struct.c:13
; for (i = 0; i < 3; i++){
      3d:	c7 45 98 00 00 00 00 	movl	$0, -104(%rbp)
      44:	83 7d 98 03 	cmpl	$3, -104(%rbp)
      48:	0f 8d 5f 00 00 00 	jge	95 <_main+0xad>
; /Users/hiro2/programming/assembly/struct.c:14
; printf("member[i].age= %d\n", member[i].age);
      4e:	48 63 45 98 	movslq	-104(%rbp), %rax
      52:	48 c1 e0 04 	shlq	$4, %rax
      56:	48 8d 4d a0 	leaq	-96(%rbp), %rcx
      5a:	48 01 c1 	addq	%rax, %rcx
      5d:	8b 31 	movl	(%rcx), %esi
      5f:	48 8d 3d ca 00 00 00 	leaq	202(%rip), %rdi
      66:	b0 00 	movb	$0, %al
      68:	e8 00 00 00 00 	callq	0 <_main+0x6d>
; /Users/hiro2/programming/assembly/struct.c:15
; printf("member[i].name= %s\n", member[i].name);
      6d:	48 63 4d 98 	movslq	-104(%rbp), %rcx
      71:	48 c1 e1 04 	shlq	$4, %rcx
      75:	48 8d 7d a0 	leaq	-96(%rbp), %rdi
      79:	48 01 cf 	addq	%rcx, %rdi
      7c:	48 83 c7 04 	addq	$4, %rdi
      80:	48 8d 0d bc 00 00 00 	leaq	188(%rip), %rcx
      87:	48 89 7d 90 	movq	%rdi, -112(%rbp)
      8b:	48 89 cf 	movq	%rcx, %rdi
      8e:	48 8b 75 90 	movq	-112(%rbp), %rsi
      92:	89 45 8c 	movl	%eax, -116(%rbp)
      95:	b0 00 	movb	$0, %al
      97:	e8 00 00 00 00 	callq	0 <_main+0x9c>
      9c:	89 45 88 	movl	%eax, -120(%rbp)
; /Users/hiro2/programming/assembly/struct.c:13
; for (i = 0; i < 3; i++){
      9f:	8b 45 98 	movl	-104(%rbp), %eax
      a2:	83 c0 01 	addl	$1, %eax
      a5:	89 45 98 	movl	%eax, -104(%rbp)
      a8:	e9 97 ff ff ff 	jmp	-105 <_main+0x44>
      ad:	48 8b 05 00 00 00 00 	movq	(%rip), %rax
      b4:	48 8b 00 	movq	(%rax), %rax
      b7:	48 8b 4d f8 	movq	-8(%rbp), %rcx
      bb:	48 39 c8 	cmpq	%rcx, %rax
      be:	0f 85 0b 00 00 00 	jne	11 <_main+0xcf>
      c4:	31 c0 	xorl	%eax, %eax
; /Users/hiro2/programming/assembly/struct.c:18
; return 0;
      c6:	48 81 c4 80 00 00 00 	addq	$128, %rsp
      cd:	5d 	popq	%rbp
      ce:	c3 	retq
      cf:	e8 00 00 00 00 	callq	0 <_main+0xd4>
      d4:	0f 0b 	ud2
