	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 15, 0	sdk_version 15, 2
	.globl	_func1                          ; -- Begin function func1
	.p2align	2
_func1:                                 ; @func1
	.cfi_startproc
; %bb.0:
	sub	sp, sp, #32
	stp	x29, x30, [sp, #16]             ; 16-byte Folded Spill
	add	x29, sp, #16
	.cfi_def_cfa w29, 16
	.cfi_offset w30, -8
	.cfi_offset w29, -16
	sub	x8, x29, #4
	mov	w9, #1                          ; =0x1
	stur	w9, [x29, #-4]
	mov	x9, sp
	str	x8, [x9]
	adrp	x0, l_.str@PAGE
	add	x0, x0, l_.str@PAGEOFF
	bl	_printf
	ldp	x29, x30, [sp, #16]             ; 16-byte Folded Reload
	add	sp, sp, #32
	ret
	.cfi_endproc
                                        ; -- End function
	.globl	_func2                          ; -- Begin function func2
	.p2align	2
_func2:                                 ; @func2
	.cfi_startproc
; %bb.0:
	sub	sp, sp, #64
	stp	x29, x30, [sp, #48]             ; 16-byte Folded Spill
	add	x29, sp, #48
	.cfi_def_cfa w29, 16
	.cfi_offset w30, -8
	.cfi_offset w29, -16
	sub	x8, x29, #4
	str	x8, [sp, #16]                   ; 8-byte Folded Spill
	stur	w0, [x29, #-4]
	sub	x8, x29, #8
	str	x8, [sp, #24]                   ; 8-byte Folded Spill
	stur	w1, [x29, #-8]
	sub	x8, x29, #12
	mov	w9, #2                          ; =0x2
	stur	w9, [x29, #-12]
	mov	x9, sp
	str	x8, [x9]
	adrp	x0, l_.str.1@PAGE
	add	x0, x0, l_.str.1@PAGEOFF
	bl	_printf
	ldr	x8, [sp, #16]                   ; 8-byte Folded Reload
	mov	x9, sp
	str	x8, [x9]
	adrp	x0, l_.str.2@PAGE
	add	x0, x0, l_.str.2@PAGEOFF
	bl	_printf
	ldr	x8, [sp, #24]                   ; 8-byte Folded Reload
	mov	x9, sp
	str	x8, [x9]
	adrp	x0, l_.str.3@PAGE
	add	x0, x0, l_.str.3@PAGEOFF
	bl	_printf
	ldp	x29, x30, [sp, #48]             ; 16-byte Folded Reload
	add	sp, sp, #64
	ret
	.cfi_endproc
                                        ; -- End function
	.globl	_main                           ; -- Begin function main
	.p2align	2
_main:                                  ; @main
	.cfi_startproc
; %bb.0:
	sub	sp, sp, #160
	stp	x29, x30, [sp, #144]            ; 16-byte Folded Spill
	add	x29, sp, #144
	.cfi_def_cfa w29, 16
	.cfi_offset w30, -8
	.cfi_offset w29, -16
	mov	w8, #0                          ; =0x0
	str	w8, [sp, #52]                   ; 4-byte Folded Spill
	stur	wzr, [x29, #-4]
	stur	w0, [x29, #-8]
	stur	x1, [x29, #-16]
	mov	x9, sp
	adrp	x8, _global_variable@GOTPAGE
	ldr	x8, [x8, _global_variable@GOTPAGEOFF]
	str	x8, [x9]
	adrp	x0, l_.str.4@PAGE
	add	x0, x0, l_.str.4@PAGEOFF
	bl	_printf
	mov	x9, sp
	adrp	x8, _file_static_variable@PAGE
	add	x8, x8, _file_static_variable@PAGEOFF
	str	x8, [x9]
	adrp	x0, l_.str.5@PAGE
	add	x0, x0, l_.str.5@PAGEOFF
	bl	_printf
	mov	x9, sp
	adrp	x8, _func1@PAGE
	add	x8, x8, _func1@PAGEOFF
	str	x8, [x9]
	adrp	x0, l_.str.6@PAGE
	add	x0, x0, l_.str.6@PAGEOFF
	bl	_printf
	mov	x9, sp
	adrp	x8, _func2@PAGE
	add	x8, x8, _func2@PAGEOFF
	str	x8, [x9]
	adrp	x0, l_.str.7@PAGE
	add	x0, x0, l_.str.7@PAGEOFF
	bl	_printf
	bl	_func1
	mov	w0, #5                          ; =0x5
	mov	w1, #6                          ; =0x6
	bl	_func2
	mov	x0, #8                          ; =0x8
	str	x0, [sp, #16]                   ; 8-byte Folded Spill
	bl	_malloc
	sub	x8, x29, #24
	stur	x0, [x29, #-24]
	mov	x9, sp
	str	x8, [x9]
	adrp	x0, l_.str.8@PAGE
	add	x0, x0, l_.str.8@PAGEOFF
	str	x0, [sp, #40]                   ; 8-byte Folded Spill
	bl	_printf
	ldr	x0, [sp, #16]                   ; 8-byte Folded Reload
	bl	_malloc
	mov	x9, x0
	ldr	x0, [sp, #40]                   ; 8-byte Folded Reload
	sub	x8, x29, #32
	stur	x9, [x29, #-32]
	mov	x9, sp
	str	x8, [x9]
	bl	_printf
	mov	x0, #4                          ; =0x4
	str	x0, [sp, #32]                   ; 8-byte Folded Spill
	bl	_malloc
	mov	x9, x0
	ldr	x0, [sp, #40]                   ; 8-byte Folded Reload
	sub	x8, x29, #40
	stur	x9, [x29, #-40]
	mov	x9, sp
	str	x8, [x9]
	bl	_printf
	ldr	x0, [sp, #32]                   ; 8-byte Folded Reload
	bl	_malloc
	mov	x9, x0
	ldr	x0, [sp, #40]                   ; 8-byte Folded Reload
	sub	x8, x29, #48
	stur	x9, [x29, #-48]
	mov	x9, sp
	str	x8, [x9]
	bl	_printf
	ldr	x0, [sp, #32]                   ; 8-byte Folded Reload
	bl	_malloc
	mov	x8, x0
	ldr	x0, [sp, #40]                   ; 8-byte Folded Reload
	stur	x8, [x29, #-56]
	mov	x9, sp
	sub	x8, x29, #64
	str	x8, [sp, #24]                   ; 8-byte Folded Spill
	str	x8, [x9]
	bl	_printf
	ldr	x0, [sp, #32]                   ; 8-byte Folded Reload
	bl	_malloc
	ldr	x8, [sp, #24]                   ; 8-byte Folded Reload
	mov	x9, x0
	ldr	x0, [sp, #40]                   ; 8-byte Folded Reload
	stur	x9, [x29, #-64]
	mov	x9, sp
	str	x8, [x9]
	bl	_printf
	ldr	x0, [sp, #32]                   ; 8-byte Folded Reload
	bl	_malloc
	mov	x9, x0
	ldr	x0, [sp, #40]                   ; 8-byte Folded Reload
	add	x8, sp, #72
	str	x9, [sp, #72]
	mov	x9, sp
	str	x8, [x9]
	bl	_printf
	ldr	x0, [sp, #32]                   ; 8-byte Folded Reload
	bl	_malloc
	mov	x9, x0
	ldr	x0, [sp, #40]                   ; 8-byte Folded Reload
	add	x8, sp, #64
	str	x9, [sp, #64]
	mov	x9, sp
	str	x8, [x9]
	bl	_printf
	ldr	x0, [sp, #32]                   ; 8-byte Folded Reload
	bl	_malloc
	mov	x9, x0
	ldr	x0, [sp, #40]                   ; 8-byte Folded Reload
	add	x8, sp, #56
	str	x9, [sp, #56]
	mov	x9, sp
	str	x8, [x9]
	bl	_printf
	ldr	w0, [sp, #52]                   ; 4-byte Folded Reload
	ldp	x29, x30, [sp, #144]            ; 16-byte Folded Reload
	add	sp, sp, #160
	ret
	.cfi_endproc
                                        ; -- End function
	.section	__TEXT,__cstring,cstring_literals
l_.str:                                 ; @.str
	.asciz	"&func1 %p\n"

l_.str.1:                               ; @.str.1
	.asciz	"&func2 %p\n"

l_.str.2:                               ; @.str.2
	.asciz	"&val1 %p\n"

l_.str.3:                               ; @.str.3
	.asciz	"&val2 %p\n"

l_.str.4:                               ; @.str.4
	.asciz	"global_variable %p\n"

	.comm	_global_variable,4,2            ; @global_variable
l_.str.5:                               ; @.str.5
	.asciz	"file_static_variable %p\n"

.zerofill __DATA,__bss,_file_static_variable,4,2 ; @file_static_variable
l_.str.6:                               ; @.str.6
	.asciz	"&func1 a %p\n"

l_.str.7:                               ; @.str.7
	.asciz	"&func2 b %p\n"

l_.str.8:                               ; @.str.8
	.asciz	"malloc %p\n"

.subsections_via_symbols
