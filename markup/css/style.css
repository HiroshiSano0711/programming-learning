/*
何を学ぶのか？
CSSのカスケード（Cascade）/カスケーディング（Cascade + ing形）

CSS(Cascading Style Sheets：カスケーディングスタイルシート）
カスケードはCSSにおいて最も基本的な要素と捉えて良さそう

何のために学ぶのか？
1. CSSの基本的な概念を理解するため
自分で考えたり調べたりして、CSSを実装できるようになっていく
2. 宣言が競合したときに直せるようにするため
（例：追加したCSSコードがブラウザで表示しても反映されていないとき）
『第21回：CSSの優先順位』で軽く触れましたが、今回からは深く解説していきます。
3.「CSS設計」を学ぶ土台とするため
CSSは適当に書いていくとあっという間に破綻する。
保守しやすいようにUIやレイアウトごとに部品化する。
カスケードに関する知識が基になってくる。

カスケードという用語の意味
・何段にもなって流れる滝
・段階的に連なっている構造
・段階的に物事が生じる様子

CSSにおけるカスケードとは
・競合する宣言を整理して、最終的なドキュメントの表示を決定するプロセス

カスケードを理解するために必要な6つのキーワード
・セレクター
・ドキュメントツリー
・詳細度
・継承
・重要性
・出所
・カスケードルール

今後の予定
カスケードを学んだ後

レスポンシブ
・ビューポート
・メディアクエリ
・相対的な長さを表す単位(%, em, vh, vw)
・Flexbox, Grid Layout
・レイアウトの組み方（要素ブロック、displayプロパティ、置換要素、非置換要素
↓
CSS設計、SCSS、JavaScript


次回
・セレクター
基本セレクター
グループ化セレクター
結合子

*/ 
/* イコールではない */
h1, p:has(> span) {
  color: red;
}
/* 
h1 {
  color: red;
}
p:has(> span) {
  color: red;
} */


/* 疑似クラス、疑似要素 */
/* 疑似クラス
:first-line
:selection
:after
:before
*/
/* 疑似要素
::first-line
::selection
::after
::before
*/

/*
【詳細度】
どのCSSプロパティが要素に適用されるかをユーザーエージェントが決定する手段。
ユーザーエージェント→ほとんどはブラウザ（他には巡回しているクローラー）
優先度を定量評価したもの

コンビネータ
・子孫結合子(スペース)
・子結合子(>)
・隣接兄弟結合子(+)
・一般兄弟結合子(~)
コンビネータは詳細度なし（0でもない。0,0,0,0でもない）

p span
0,0,0,2

p > span
0,0,0,2
*/

/* 0,0,0,4 */
/* p span + p span {
  color: blue;
} */

/* p要素の子要素であるspan */
/* 0,0,0,2 */
/* p > span {
  color: blue;
} */

/* p要素の子孫要素であるspan */
/* 0,0,0,2 */
/* p span {
  color: red;
} */

/* 継承は詳細度なし
詳細度0 ＞ 詳細度なし
継承されるプロパティ、されないプロパティ

ブロックに対して使用するプロパティ
margin
padding
border
background

p {
  color: red;
}
*/


/* ユニバーサルセレクタ */
/* 0,0,0,0 */
/* 詳細度なし < 0,0,0,0 */
/* * {
  color: blue;
} */

/* text-decorationの各値は継承されないが伝播する */
/* p {
  color: red;
  text-decoration: overline;
}
strong {
  color: gray; */
/* } */

/* p {
  width: 5em;
  background-color: #f0f0f0;
} */
