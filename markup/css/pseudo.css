/* 
疑似クラス/疑似要素

1. ドキュメントの構造以外の情報や、推論が必要なもの
に基づいてスタイルを適用できるセレクター（セレクターに付加するキーワード）
（マークアップを見ただけでは正確にわからない情報）
2. 他の単純なセレクターや結合子ではできない複雑な表現（主に静的な疑似クラス）

【疑似クラス】
・要素の状態に基づいてスタイルを適用する

<動的>
ユーザーの操作（操作したという情報）に基づいてスタイルを適用できる。
:hover, :checkedなど

いつ発生するかわからない、何回発生するかわからない
ユーザーにとってより操作がわかりやすいようにできる。

<静的>
:empty → <div></div>
:nth-child()など

2番が該当
*/

/*
<動的>
例を3つほど
*/
/* マウスオーバーした時（要素の上にマウスポインターがある状態） */
a:hover {
  color: red;
}

/*
フォーカス
tabキーでその要素にピントを合わせた状態
入力受付状態(テキストボックス)
*/
input[type="text"]:focus {
  outline-color: red;
}

/* チェックが入っている状態（その次のlabel要素に適用） */
input:checked + label {
  color: red;
}

/*
<静的>
例を2つ
*/
.error {
  background-color: red;
}
.error:empty {
  display: none;
}

/*
:nth-child(-n + x)
x番目以前（最初からx番目の子要素まで）

例：ランキング5位以内はスタイルを変えたい。
5番目以前のリストにスタイルをあてる。
*/
li:nth-child(-n + 5) {
  background-color: red;
}

/*
:nth-child(n + x)
x番目以降（x番目から最後の子要素まで）

:nth-child(n + x):nth-child(-n + y)
x番目からy番目
*/

/*
・（ドキュメントの構造以外の情報の内の1つ）ユーザーの操作に応じてスタイルを変化させたい場合
・複雑なセレクター指定をしたい場合
「CSS 疑似クラス」とかで検索してみる

*/

/*
疑似要素
・要素の特定の部分にスタイルを適用する
::first-line

ただし、::before, ::afterに関しては少し特殊
次回詳しく解説します。
*/



/* p {
  background-color: blue;
}

p::first-line {
  background-color: blue;
} */
