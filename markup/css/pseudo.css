/* 
疑似クラス/疑似要素

【概要】
1. ドキュメントの構造以外のもの（マークアップを見ただけでは正確にわからないもの）
2. ブラウザが推論する必要のあるもの
などに基づいてスタイルを適用することができる

3. 他の単純なセレクターや結合子ではできない複雑な表現


【疑似クラス】
・要素の状態に基づいてスタイルを適用する

<動的>
:hover, :focus, :checkedなど

<静的>
:empty, :last-child, :nth-child()など
*/

/*
<動的>
例を３つほど
*/
/* マウスオーバーした時 */
a:hover {
  color: red;
}

/* テキストボックスが入力受付状態になった時 */
input[type="text"]:focus {
  outline-color: red;
}

/* チェック状態になった時（その次のlabel要素に適用） */
input:checked + label {
  color: red;
}

/*
ユーザーに関する情報に基づいてスタイルを適用できる。
ユーザーにとって操作がよりわかりやすいようにできる。

いつ発生するかわからない
*/

/*
<静的>
例を2つ
*/
.error {
  background-color: red;
}
.error:empty {
  display: none;
}

/*
:nth-child(n + x)
x番目以降（x番目から最後まで）

例：リストは10個までしか追加できない仕様の場合
11番目以降のリストにスタイルをあてる。
*/
li:nth-child(n + 11) {
  background-color: red;
}

/*
疑似要素
・要素の特定の部分にスタイルを適用する
::first-line

ただし、::before, ::afterに関しては少し特殊なので、次回詳しく解説します。
*/
/* p {
  background-color: blue;
}

p::first-line {
  background-color: blue;
} */
