/*
何を学んでいくのか？

CSSの「カスケード（Cascade）」

CSS(Cascading Style Sheets：カスケーディングスタイルシート）
※Cascading（cascadeの変化形）
※以降、基本的にカスケード(cascade)と呼称します

「カスケード」はCSSにおいて最も基本的な概念と捉えて良さそう

何のためにカスケードを学ぶのか？
1. 今後のCSSの学習を早めるため
基本的な仕組み、根底にある概念、全体像
を理解すると自分で整理したり調べたりできるようになる
↓
CSSを実装できるようになっていく

2. 宣言が競合したときに直せるようにするため
例：CSSコードを追加してもブラウザで反映されないとき
『第21回：CSSの優先順位』で軽く触れました。
今回からは体系的に深く解説していきます。
　
3.「CSS設計」を学ぶ土台とするため
CSSは適当に書いていくとあっという間に破綻する。
運用/保守が難しいコードになりやすい。
OOCSS、SMACSS、FLOCSS、BEMなどのCSS設計手法を使う
保守しやすいようにUIやレイアウトごとに部品化する。
カスケードに関する知識（詳細度、継承など）が基になってくる。



今回はカスケードの概要について

「カスケード」という言葉の意味
・何段にもなって流れる滝
・段階的に連なっている構造
・段階的に物事が生じる様子

CSSにおけるカスケードとは
・競合する宣言を整理して、最終的なドキュメントの表示を決定するプロセス

カスケードを理解するための7つのキーワード
・セレクター
・ドキュメントツリー
・詳細度
・継承
・重要性
・出所
・カスケードルール

今後の解説動画の予定
学んでいた方がいい内容
カスケードを学んだ後の流れ

【レスポンシブ】
・ビューポート
・メディアクエリ
・相対的な長さを表す単位(%, em, vh, vw)
・Flexbox, Grid Layout
【レイアウトの組み方】
・要素ブロック、表示形式、置換要素、非置換要素などの基礎知識
・レイアウトを組むコツ
ここまで学んで練習していけば大体の静的なWebサイトは作れるようになる
【アニメーション、トランジション】

次回
・セレクター
基本セレクター
グループ化セレクター
結合子

・ドキュメントツリー
構造

*/

/*
【詳細度】
どのCSSプロパティが要素に適用されるかをユーザーエージェントが決定する手段。
ユーザーエージェント→ほとんどはブラウザ（他には巡回しているクローラー）
優先度を定量評価したもの

結合子（コンビネーター）
・子孫結合子(スペース)
・子結合子(>)
・隣接兄弟結合子(+)
・一般兄弟結合子(~)
コンビネーターは詳細度なし（0でもない。0,0,0,0でもない）

p span
0,0,0,2

p > span
0,0,0,2
*/

/* 0,0,0,4 */
/* p span + p span {
  color: blue;
} */

/* p要素の子要素であるspan */
/* 0,0,0,2 */
/* p > span {
  color: blue;
} */

/* p要素の子孫要素であるspan */
/* 0,0,0,2 */
/* p span {
  color: red;
} */

/* 継承は詳細度なし
詳細度0 ＞ 詳細度なし
継承されるプロパティ、されないプロパティ

ブロックに対して使用するプロパティ
margin
padding
border
background

p {
  color: red;
}
*/

/* ユニバーサルセレクタ */
/* 0,0,0,0 */
/* 詳細度なし < 0,0,0,0 */
/* * {
  color: blue;
} */

/* text-decorationの各値は継承されないが伝播する */
/* p {
  color: red;
  text-decoration: overline;
}
strong {
  color: gray; */
/* } */

/* p {
  width: 5em;
  background-color: #f0f0f0;
} */

/* emの挙動確認 */
/* body {
  font-size: 16px;
}

h1 {
  font-size: 2em;
}

span {
  font-size: 0.5em;
} */

h1 {
  background-image: linear-gradient(black, white);
}
p {
  border-bottom: 1px double #dddddd;
}
